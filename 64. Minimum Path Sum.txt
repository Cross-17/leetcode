64. Minimum Path Sum

Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right which minimizes the sum of all numbers along its path.

Note: You can only move either down or right at any point in time.

class Solution {
    public int minPathSum(int[][] grid) {
        int[][] memo = new int[grid.length][grid[0].length];
        return help(grid,0,0,memo);
    }
    int help(int[][] grid,int i, int j,int[][] memo){
        if(memo[i][j]!=0)
            return memo[i][j];
        int value = 0;
        if(i == grid.length - 1 && j == grid[0].length - 1 )
            value =  grid[i][j] ;
        else
            if(i == grid.length - 1)
                value =  help(grid,i,j + 1,memo) + grid[i][j];
            else
                if(j == grid[0].length - 1)
                    value =  help(grid,i + 1,j,memo) + grid[i][j];
                else value = Math.min(help(grid,i,j + 1,memo),help(grid,i + 1,j,memo)) + grid[i][j];
        memo[i][j] = value;
        return value;
        
    }
}