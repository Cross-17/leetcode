661. Image Smoother

Given a 2D integer matrix M representing the gray scale of an image, you need to design a smoother to make the gray scale of each cell becomes the average gray scale (rounding down) of all the 8 surrounding cells and itself. If a cell has less than 8 surrounding cells, then use as many as you can.

class Solution {
    public int[][] imageSmoother(int[][] M) {
        int[][] result = new int[M.length][M[0].length];
        for(int i =0; i < M.length; i++)
            for(int j =0; j < M[0].length; j++){
                result[i][j] = Smoother(M,i,j);
            }
        return result;
    }
    public int Smoother(int[][] M,int a, int b){
        int count = 0;
        int sum = 0;
        for(int i = -1; i <= 1; i++)
            for(int j = -1; j <= 1; j++){
                if(isValid(M,a+i,b+j)){
                    count++;
                    sum += M[a+i][b+j];
                }
            }
        return sum/count;
    }
    public boolean isValid(int[][] M,int i, int j){
        return i >=0 && i < M.length && j >=0 && j < M[0].length;
    }
}