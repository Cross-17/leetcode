70. Climbing Stairs

You are climbing a stair case. It takes n steps to reach to the top.

Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?

Note: Given n will be a positive integer.

class Solution {
    public int climbStairs(int n) {
       return help(n,new int[n + 1]);
    }
        public int help(int n, int[] mem){
        if(n == 1)
            return 1;
        if(n == 2)
            return 2;
        if(n == 3)
            return 3;
        if(mem[n] > 0 )
            return mem[n];
            
        mem[n] =  help(n-1,mem) + help(n-2,mem) ;
        return mem[n];
        }
}